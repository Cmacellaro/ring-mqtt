#!/command/with-contenv bashio

# =============================================================================
# ring-mqtt run script for s6-init               #
#
# This script automatically detects if it is running as the Home Assistant 
# addon or a standard docker environment and sets configuration variables as 
# appropriate for the detected environment.
# ==============================================================================

# Delay to keep logs messages from overlapping with s6 logs
sleep .5

echo "-------------------------------------------------------"
echo -n "ring-mqtt.js version: "
echo $(cat package.json | grep version | cut -f4 -d'"')
echo Node version $(node -v)
echo NPM version $(npm -v)
git --version
echo "-------------------------------------------------------"

# If HASSIO_TOKEN variable exist we are running as addon
if [ -v HASSIO_TOKEN ]; then
    export RUNMODE="addon"
    if ! bashio::config.require 'mqtt_url_test'; then
        exit 2
    fi

    if bashio::services.available 'mqtt'; then
        export BRANCH=$(bashio::config "branch")
        export DEBUG=$(bashio::config "debug")

        # Export MQTT service discovery data for use within NodeJS process
        if bashio::services.available 'mqtt'; then
            export HAMQTTHOST=$(bashio::services mqtt "host")
            export HAMQTTPORT=$(bashio::services mqtt "port")
            export HAMQTTUSER=$(bashio::services mqtt "username")
            export HAMQTTPASS=$(bashio::services mqtt "password")
        fi

        # Export a few helper variables for building the Streaming and Still Image URLs
        export HAHOSTNAME=$(bashio::info.hostname)
        export ADDONHOSTNAME=$HOSTNAME
    fi
else
    export RUNMODE=docker

    # If branch is not explicitly defined, use builtin branch
    if [ ! -v BRANCH]; then
        export BRANCH="builtin"
    fi

    # If debug is not explicitly defined, use default
    if [ ! -v DEBUG ]; then
        export DEBUG="ring-*"
    fi
fi

if [ "${BRANCH}" = "latest" ] || [ "${BRANCH}" = "dev" ]; then
    cd "/app/ring-mqtt-${BRANCH}"
else
    cd /app/ring-mqtt
fi

echo "Running ring-mqtt..."
exec ./ring-mqtt.js
